<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:property-placeholder
		location="file:src/main/webapp/WEB-INF/config/application-test.properties"
		ignore-resource-not-found="false" />

	<jpa:repositories base-package="com.tvfreakz.repository" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="punit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
				<entry key="hibernate.hbm2ddl.auto" value="update" />
				<entry key="hibernate.format_sql" value="true" />
				<entry key="hibernate.show_sql" value="true" />
			</map>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource">
		<property name="driverClass" value="${db.driver}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<bean id="sqlDataTypeFactory" class="org.dbunit.ext.mysql.MySqlDataTypeFactory" />

	<bean id="dbUnitDatabaseConfig" class="com.github.springtestdbunit.bean.DatabaseConfigBean">
		<property name="datatypeFactory" ref="sqlDataTypeFactory" />
	</bean>
	
	<bean id="dbUnitDatabaseConnection"
		class="com.github.springtestdbunit.bean.DatabaseDataSourceConnectionFactoryBean">
		<property name="databaseConfig" ref="dbUnitDatabaseConfig" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n/messages" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<bean id="channelProgrammeService" name="channelProgrammeServiceMock"
		class="org.mockito.Mockito" factory-method="mock">
		<constructor-arg value="com.tvfreakz.service.ChannelProgrammeService" />
	</bean>

	<bean id="directorService" name="directorServiceMock" class="org.mockito.Mockito"
		factory-method="mock">
		<constructor-arg value="com.tvfreakz.service.DirectorService" />
	</bean>

	<bean id="performerService" name="performerServiceMock" class="org.mockito.Mockito"
		factory-method="mock">
		<constructor-arg value="com.tvfreakz.service.PerformerService" />
	</bean>

	<bean id="channelService" name="channelServiceMock" class="org.mockito.Mockito"
		factory-method="mock">
		<constructor-arg value="com.tvfreakz.service.ChannelService" />
	</bean>

	<bean id="genreService" name="genreServiceMock" class="org.mockito.Mockito"
		factory-method="mock">
		<constructor-arg value="com.tvfreakz.service.GenreService" />
	</bean>

	<!-- <bean id="directorRepository" name="directorRepositoryMock" class="org.mockito.Mockito" 
		factory-method="mock"> <constructor-arg value="com.tvfreakz.repository.DirectorRepository" 
		/> </bean> -->

</beans>
